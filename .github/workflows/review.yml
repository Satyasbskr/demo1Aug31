# Deploy a review app to 'dev' cluster for each pull request
name: deploy review app
on: 
  workflow_dispatch:

env:
  NAMESPACE_PREFIX: building-blocks
  DOCKER_DEV_REGISTRY: docker-dev.registry.kroger.com
  DOCKER_REPOSITORY: tools/webapp

jobs:
  build:
    name: üê≥ Build and push Docker image
    runs-on: [self-hosted]
    steps:
      - name: üõí Check out commit that trigged workflow
        uses: actions/checkout@v2
      # duplicate the login action below to log in to multiple registries
      - name: üîê Log in to Docker local registry # used as cache source and to push built image
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_DEV_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: üê∏ Configure JFrog CLI
        run: |
          jfrog config add --url=https://artifactory.kroger.com --user=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }} --interactive=false artifactory
      - name: üê≥ üèó Build Docker image
        run: |
          docker pull ${{ env.DOCKER_DEV_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}:latest || true
          docker build -t ${{ env.DOCKER_DEV_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}:pr-${{ github.event.pull_request.number }} \
            --label org.opencontainers.image.source=${{ env.GITHUB_SERVER_URL }}/${{ github.repository }} \
            --label org.opencontainers.image.revision=${{ github.sha }} \
            --label "org.opencontainers.image.vendor=Kroger Technology" \
            --label org.opencontainers.image.ref.name=${{ github.ref }} \
            --cache-from=${{ env.DOCKER_DEV_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}:latest \
            .
      - name: üê∏ Push to jfrog Artifactory
        uses: ./.github/actions/jfrog-docker-push
        with:
          images: |
            ${{ env.DOCKER_DEV_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}:pr-${{ github.event.pull_request.number }}
          repo: docker-dev
          server-id: artifactory

  deploy-to-review:
    name: üöÄ Deploy review app to Kubernetes dev
    needs: [build]
    runs-on: [self-hosted]
    environment:
      name: review-pr-${{ github.event.pull_request.number }}
      url: https://webapp-pr-${{ github.event.pull_request.number }}.tooling.rch-cdc-cxnonprod.kroger.com
    strategy:
      matrix:
        datacenter:
        - { name: CDC, key: cdc, kubeconfigSecret: 'KUBE_CONFIG_NON_PROD_CDC' }
        - { name: HDC, key: hdc, kubeconfigSecret: 'KUBE_CONFIG_NON_PROD_HDC' }
    steps:
      - name: üõí Check out Kubernetes manifest
        uses: actions/checkout@v2
      - uses: azure/setup-kubectl@v1
      - name: üîê Set up kubeconfig for ${{ matrix.datacenter.name }}
        uses: Azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets[matrix.datacenter.kubeconfigSecret] }}
      - uses: azure/k8s-create-secret@v1
        with:
          namespace: ${{ env.NAMESPACE_PREFIX }}-dev
          secret-type: 'generic'
          arguments: --from-literal=application-secret=${{ secrets.WEBAPP_SECRET }}
          secret-name: webapp-pr-${{ github.event.pull_request.number }}-secret
      - uses: mshick/fast-envsubst@v1
        with:
          in-file: k8s/manifest-review.template.yml
          out-file: k8s/manifest-review.yml
        env:
          NAME: pr-${{ github.event.pull_request.number }}
          DATACENTER: ${{ matrix.datacenter.key }}
      - uses: Azure/k8s-deploy@v1.4
        with:
          namespace: ${{ env.NAMESPACE_PREFIX }}-dev
          manifests: |
            k8s/manifest-review.yml
          images: |
            ${{ env.DOCKER_DEV_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}:pr-${{ github.event.pull_request.number }}
